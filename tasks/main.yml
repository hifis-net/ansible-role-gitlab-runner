# SPDX-FileCopyrightText: 2020 Helmholtz Centre for Environmental Research (UFZ)
# SPDX-FileCopyrightText: 2020 Helmholtz-Zentrum Dresden - Rossendorf (HZDR)
#
# SPDX-License-Identifier: Apache-2.0

---
- name: "Set OS family dependent variables"
  ansible.builtin.include_vars: "{{ ansible_os_family | lower }}.yml"

- name: "Check if directory /etc/gitlab-runner already exists"
  ansible.builtin.stat:
    path: "/etc/gitlab-runner"
  register: "gitlab_runner_dir"

- name: "Determine if this is an initial dry-run"
  ansible.builtin.set_fact:
    gitlab_runner_is_initial_dryrun: "{{ ansible_check_mode and not gitlab_runner_dir.stat.exists }}"

- name: "Include docker-machine tasks"
  ansible.builtin.include_tasks: install.docker-machine.yml

- name: "Include installation tasks for Debian-like OS"
  ansible.builtin.include_tasks: install.debianlike.yml
  when: ansible_os_family == "Debian"

- name: "Include tasks to configure the system"
  ansible.builtin.include_tasks: configuration.yml

- name: "Ignition configuration must be generated before docker-machine init"
  ansible.builtin.meta: "flush_handlers"

- name: "Initialize docker-machine"
  ansible.builtin.include_tasks: "docker-machine-init.yml"
  when:
    - "gitlab_runner.executor == 'docker+machine'"
  no_log: true
  loop: "{{ gitlab_runner_list }}"
  loop_control:
    loop_var: gitlab_runner

- name: "Template config file"
  ansible.builtin.template:
    src: "config.toml.j2"
    dest: "{{ gitlab_runner_config_path }}"
    owner: "{{ gitlab_runner_config_owner | default('root') }}"
    group: "{{ gitlab_runner_config_group | default('root') }}"
    mode: "0600"
  notify: "Restart GitLab-Runner"
  no_log: true

- name: "Start GitLab-Runner"
  ansible.builtin.service:
    name: "gitlab-runner"
    state: "started"
  when: "not gitlab_runner_is_initial_dryrun"


...
