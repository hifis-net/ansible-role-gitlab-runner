# SPDX-FileCopyrightText: 2020 Helmholtz Centre for Environmental Research (UFZ)
# SPDX-FileCopyrightText: 2020 Helmholtz-Zentrum Dresden - Rossendorf (HZDR)
#
# SPDX-License-Identifier: Apache-2.0

---
dependency:
  name: galaxy
  options:
    role-file: requirements.yml
driver:
  name: podman
platforms:
  - name: instance_gitlab_ci_openstack_1
    image: docker.io/geerlingguy/docker-${MOLECULE_DISTRO:-ubuntu2004}-ansible:latest
    pre_build_image: true
    override_command: false
    privileged: true
    systemd: true
    tty: true
  - name: instance_gitlab_ci_openstack_2
    image: docker.io/geerlingguy/docker-${MOLECULE_DISTRO:-ubuntu2004}-ansible:latest
    pre_build_image: true
    override_command: false
    systemd: true
    tty: true
lint: |
  yamllint --strict --format colored .
  ansible-lint -v --force-color --exclude .cache/ .
provisioner:
  name: ansible
  playbooks:
    prepare: prepare.yml
    converge: converge.yml
  inventory:
    hosts:
      all:
        vars:
          gitlab_runner_concurrent: 4
    host_vars:
      instance_gitlab_ci_openstack_1:
        gitlab_runner_version: "14.9.1"
        gitlab_runner_deb_file: "https://packages.gitlab.com/runner/gitlab-runner/packages/ubuntu/focal/gitlab-runner_14.9.1_amd64.deb/download.deb"
        gitlab_runner_install_docker: true
        gitlab_runner_ssh_public_key: "test_key.pub"
        gitlab_runner_ssh_private_key: "test_key"
        gitlab_runner_list:
          - name: "test01"
            url: "https://gitlab.com"
            description: "Molecule test runner"
            registration_token: ${REGISTRATION_TOKEN}
            executor: "docker"
            environment: ["CI_CPUS=8", "DOCKER_TLS_CERTDIR=/certs"]
            docker_volumes: ["/cache", "/certs/client"]
            docker_image: "python:3.8"
            tags: ["docker", "hifis"]
            locked: True
            limit: 10
      instance_gitlab_ci_openstack_2:
        gitlab_runner_version: "14.8.2"
        gitlab_runner_install_docker: false
        gitlab_runner_ssh_public_key: ""
        gitlab_runner_ssh_private_key: ""
        gitlab_runner_registry_mirror: "https://registry-mirror.example"
        gitlab_runner_list:
          - name: "test01"
            url: "https://gitlab.com"
            description: "Molecule test runner"
            registration_token: ${REGISTRATION_TOKEN}
            executor: "docker+machine"
            environment: ["CI_CPUS=8", "DOCKER_TLS_CERTDIR=/certs"]
            docker_volumes: ["/cache", "/certs/client", "/opt/docker/daemon.json:/etc/docker/daemon.json:ro"]
            docker_image: "python:3.8"
            tags: ["docker", "hifis"]
            locked: True
            limit: 10
            machine_idle_count: 5
            machine_idle_time: 7200
            machine_max_builds: 4
            machine_max_growth_rate: 2
            machine_driver: "openstack"
            machine_name: "auto-scale-%s"
            machine_options:
              - "openstack-auth-url=https://openstack.example:5000/v3"
              - "openstack-image-id=73f07dd3-fa8b-468f-b6bc-b0cd4510f5d0"
              - "openstack-flavor-name=m1.small"
              - "openstack-net-id=7834deeb-8bd5-4fc7-b35b-24035d8f47a7"
              - "openstack-username=gitlab-runner"
              - "openstack-password=secret"
              - "openstack-tenant-id=123456"
              - "openstack-domain-name=default"
              - "openstack-ssh-user=core"
              - "openstack-sec-groups=Internal"
              - "openstack-keypair-name=runners-internal"
              - "openstack-private-key-file=/etc/gitlab-runner/gitlab_runner_key"
              - "openstack-user-data-file=/etc/gitlab-runner/ignition.json"
              - "openstack-active-timeout=300"
              - "engine-registry-mirror=https://registry-mirror.example"
            cache_type: "s3"
            cache_server_address: "https://cache.example"
            cache_access_key: "key"
            cache_secret_key: "secret"
            cache_bucket_name: "bucket"
            cache_insecure: "false"
verifier:
  name: ansible
